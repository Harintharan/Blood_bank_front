// // pipeline {
// //     agent any

// //     environment {
// //         DOCKER_IMAGE = 'blood-bank-front'
// //     }

// //     stages {
// //         stage('Checkout') {
// //             steps {
// //                 // Checkout the Git repository
// //                 git 'https://github.com/Harintharan/Blood_bank_front.git'
// //             }
// //         }

// //         stage('Build Docker Image') {
// //             steps {
// //                 script {
// //                     // Build Docker image with a tag based on Jenkins build number
// //                     docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
// //                 }
// //             }
// //         }

// //         stage('Run Docker Container') {
// //             steps {
// //                 script {
// //                     // Stop and remove any existing container with the same name
// //                     def existingContainer = docker.container('blood-bank-container')
// //                     if (existingContainer) {
// //                         existingContainer.stop()
// //                         existingContainer.remove()
// //                     }
// //                     // Run Docker container from the built image
// //                     docker.image("${DOCKER_IMAGE}:${env.BUILD_NUMBER}").run('-d -p 8080:80 --name blood-bank-container')
// //                 }
// //             }
// //         }
// //     }

// //     post {
// //         success {
// //             echo 'Pipeline succeeded! Application is deployed.'
// //         }
// //         failure {
// //             echo 'Pipeline failed! Application deployment failed.'
// //         }
// //     }
// // }
// pipeline {
//     agent any

//     environment {
//         DOCKER_IMAGE = 'blood-bank-front'
//         CONTAINER_NAME = 'blood-bank-container'
//     }

//     stages {
//         stage('Checkout') {
//             steps {
//                 // Checkout the Git repository
//                 git 'https://github.com/Harintharan/Blood_bank_front.git'
//             }
//         }

//         stage('Build Docker Image') {
//             steps {
//                 script {
//                     // Build Docker image with a tag based on Jenkins build number
//                     docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
//                 }
//             }
//         }

//         stage('Run Docker Container') {
//             steps {
//                 script {
//                     // Stop and remove any existing container with the same name
//                     def existingContainer = docker.container(CONTAINER_NAME)
//                     if (existingContainer) {
//                         existingContainer.stop()
//                         existingContainer.remove()
//                     }
//                     // Run Docker container from the built image
//                     docker.image("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
//                           .run('-d', '-p', '8080:80', '--name', CONTAINER_NAME)
//                 }
//             }
//         }
//     }

//     post {
//         success {
//             echo 'Pipeline succeeded! Application is deployed.'
//             // Additional success actions if needed
//         }
//         failure {
//             echo 'Pipeline failed! Application deployment failed.'
//             // Additional failure actions if needed
//         }
//     }
// }

pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "nharintharan@gmail.com/frontend"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-ssh-key', url: 'git@github.com:Harintharan/Blood_bank_front.git', branch: 'main'
            }
        }

        stage('Build') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials') {
                        sh 'docker push $DOCKER_IMAGE'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                docker stop frontend || true
                docker rm frontend || true
                docker run -d --name frontend -p 3000:80 $DOCKER_IMAGE
                '''
            }
        }
    }
}
