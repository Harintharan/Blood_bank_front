pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'blood-bank-front'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the Git repository
                git 'https://github.com/Harintharan/Blood_bank_front.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image with a tag based on Jenkins build number
                    docker.build("${DOCKER_IMAGE}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    // Stop and remove any existing container with the same name
                    def existingContainer = docker.container('blood-bank-container')
                    if (existingContainer) {
                        existingContainer.stop()
                        existingContainer.remove()
                    }
                    // Run Docker container from the built image
                    docker.image("${DOCKER_IMAGE}:${env.BUILD_NUMBER}").run('-d -p 8080:80 --name blood-bank-container')
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! Application is deployed.'
        }
        failure {
            echo 'Pipeline failed! Application deployment failed.'
        }
    }
}
